[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "codex"
version = "0.1.0"
description = "Universal code generation platform with pattern-based best practices"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "pydantic>=2.0",
    "pydantic-settings>=2.0",
    "sqlmodel>=0.0.14",
    "aiosqlite>=0.19",
    "typer>=0.12",
    "rich>=13.0",
    "httpx>=0.25",
    "cookiecutter>=2.6",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "toml>=0.10.2",
    "mcp>=1.0.0",
    "logfire>=0.1.0",
    "greenlet>=3.2.4",
    "pytest>=8.4.1",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pytest>=8.0",
    "pytest-asyncio>=0.21",
    "pytest-cov>=4.1"
]

[project.scripts]
codex = "codex.cli:cli"

[tool.setuptools]
packages = ["codex"]

[tool.setuptools.package-data]
codex = ["data/*.md"]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py311"
required-version = ">=0.8.0"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "UP", "B", "C4", "SIM", "ARG", "TCH", "RUF", "PL", "TRY", "FLY", "PERF", "LOG"]
ignore = [
    "E501",     # Line too long - we use 120 char limit
    "B008",     # Function calls in argument defaults
    "TRY003",   # Long exception messages
    "PLR0913",  # Too many arguments
    "ARG002",   # Unused arguments (often needed for interfaces)
    "SIM105",   # Use contextlib.suppress (readability preference)
    "PLR2004",  # Magic values (constants not always needed)
]
fixable = ["F401", "I", "UP", "RUF100", "RUF022"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403"]
"tests/*.py" = ["ARG", "PLR2004", "S101"]

[tool.mypy]
python_version = "3.11"
strict = true
namespace_packages = true
explicit_package_bases = true
show_error_codes = true
show_column_numbers = true
pretty = true
show_error_context = true
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_decorators = false
disallow_any_unimported = false
disallow_subclassing_any = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
